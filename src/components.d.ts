/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  Fight,
} from './server/game/fight/fight';
import {
  Fighter,
} from './server/game/fighter/fighter';
import {
  GameSkeleton,
} from './models/game-skeleton';
import {
  RoundNews,
} from './models/roundNews';
import {
  Manager,
} from './server/game/manager/manager';
import {
  FighterSkeleton,
} from './models/fighter-skeleton';


export namespace Components {

  interface FightComponent {
    'fight': Fight;
  }
  interface FightComponentAttributes extends StencilHTMLAttributes {
    'fight'?: Fight;
  }

  interface FighterComponent {
    'fighter': Fighter;
  }
  interface FighterComponentAttributes extends StencilHTMLAttributes {
    'fighter'?: Fighter;
  }

  interface GameComponent {
    'game': GameSkeleton;
  }
  interface GameComponentAttributes extends StencilHTMLAttributes {
    'game'?: GameSkeleton;
  }

  interface SetNameComponent {}
  interface SetNameComponentAttributes extends StencilHTMLAttributes {}

  interface NewsComponent {
    'roundNews': RoundNews[];
  }
  interface NewsComponentAttributes extends StencilHTMLAttributes {
    'roundNews'?: RoundNews[];
  }

  interface NotConnectedComponent {}
  interface NotConnectedComponentAttributes extends StencilHTMLAttributes {}

  interface PostFightComponent {}
  interface PostFightComponentAttributes extends StencilHTMLAttributes {}

  interface PreFightComponent {
    'fighters': FighterSkeleton[];
    'manager': Manager;
  }
  interface PreFightComponentAttributes extends StencilHTMLAttributes {
    'fighters'?: FighterSkeleton[];
    'manager'?: Manager;
  }

  interface PreGameLobbyComponent {}
  interface PreGameLobbyComponentAttributes extends StencilHTMLAttributes {}

  interface DanielsFightingPit {}
  interface DanielsFightingPitAttributes extends StencilHTMLAttributes {}

  interface FighterModel {
    'fighter': Fighter;
  }
  interface FighterModelAttributes extends StencilHTMLAttributes {
    'fighter'?: Fighter;
  }
}

declare global {
  interface StencilElementInterfaces {
    'FightComponent': Components.FightComponent;
    'FighterComponent': Components.FighterComponent;
    'GameComponent': Components.GameComponent;
    'SetNameComponent': Components.SetNameComponent;
    'NewsComponent': Components.NewsComponent;
    'NotConnectedComponent': Components.NotConnectedComponent;
    'PostFightComponent': Components.PostFightComponent;
    'PreFightComponent': Components.PreFightComponent;
    'PreGameLobbyComponent': Components.PreGameLobbyComponent;
    'DanielsFightingPit': Components.DanielsFightingPit;
    'FighterModel': Components.FighterModel;
  }

  interface StencilIntrinsicElements {
    'fight-component': Components.FightComponentAttributes;
    'fighter-component': Components.FighterComponentAttributes;
    'game-component': Components.GameComponentAttributes;
    'set-name-component': Components.SetNameComponentAttributes;
    'news-component': Components.NewsComponentAttributes;
    'not-connected-component': Components.NotConnectedComponentAttributes;
    'post-fight-component': Components.PostFightComponentAttributes;
    'pre-fight-component': Components.PreFightComponentAttributes;
    'pre-game-lobby-component': Components.PreGameLobbyComponentAttributes;
    'daniels-fighting-pit': Components.DanielsFightingPitAttributes;
    'fighter-model': Components.FighterModelAttributes;
  }


  interface HTMLFightComponentElement extends Components.FightComponent, HTMLStencilElement {}
  var HTMLFightComponentElement: {
    prototype: HTMLFightComponentElement;
    new (): HTMLFightComponentElement;
  };

  interface HTMLFighterComponentElement extends Components.FighterComponent, HTMLStencilElement {}
  var HTMLFighterComponentElement: {
    prototype: HTMLFighterComponentElement;
    new (): HTMLFighterComponentElement;
  };

  interface HTMLGameComponentElement extends Components.GameComponent, HTMLStencilElement {}
  var HTMLGameComponentElement: {
    prototype: HTMLGameComponentElement;
    new (): HTMLGameComponentElement;
  };

  interface HTMLSetNameComponentElement extends Components.SetNameComponent, HTMLStencilElement {}
  var HTMLSetNameComponentElement: {
    prototype: HTMLSetNameComponentElement;
    new (): HTMLSetNameComponentElement;
  };

  interface HTMLNewsComponentElement extends Components.NewsComponent, HTMLStencilElement {}
  var HTMLNewsComponentElement: {
    prototype: HTMLNewsComponentElement;
    new (): HTMLNewsComponentElement;
  };

  interface HTMLNotConnectedComponentElement extends Components.NotConnectedComponent, HTMLStencilElement {}
  var HTMLNotConnectedComponentElement: {
    prototype: HTMLNotConnectedComponentElement;
    new (): HTMLNotConnectedComponentElement;
  };

  interface HTMLPostFightComponentElement extends Components.PostFightComponent, HTMLStencilElement {}
  var HTMLPostFightComponentElement: {
    prototype: HTMLPostFightComponentElement;
    new (): HTMLPostFightComponentElement;
  };

  interface HTMLPreFightComponentElement extends Components.PreFightComponent, HTMLStencilElement {}
  var HTMLPreFightComponentElement: {
    prototype: HTMLPreFightComponentElement;
    new (): HTMLPreFightComponentElement;
  };

  interface HTMLPreGameLobbyComponentElement extends Components.PreGameLobbyComponent, HTMLStencilElement {}
  var HTMLPreGameLobbyComponentElement: {
    prototype: HTMLPreGameLobbyComponentElement;
    new (): HTMLPreGameLobbyComponentElement;
  };

  interface HTMLDanielsFightingPitElement extends Components.DanielsFightingPit, HTMLStencilElement {}
  var HTMLDanielsFightingPitElement: {
    prototype: HTMLDanielsFightingPitElement;
    new (): HTMLDanielsFightingPitElement;
  };

  interface HTMLFighterModelElement extends Components.FighterModel, HTMLStencilElement {}
  var HTMLFighterModelElement: {
    prototype: HTMLFighterModelElement;
    new (): HTMLFighterModelElement;
  };

  interface HTMLElementTagNameMap {
    'fight-component': HTMLFightComponentElement
    'fighter-component': HTMLFighterComponentElement
    'game-component': HTMLGameComponentElement
    'set-name-component': HTMLSetNameComponentElement
    'news-component': HTMLNewsComponentElement
    'not-connected-component': HTMLNotConnectedComponentElement
    'post-fight-component': HTMLPostFightComponentElement
    'pre-fight-component': HTMLPreFightComponentElement
    'pre-game-lobby-component': HTMLPreGameLobbyComponentElement
    'daniels-fighting-pit': HTMLDanielsFightingPitElement
    'fighter-model': HTMLFighterModelElement
  }

  interface ElementTagNameMap {
    'fight-component': HTMLFightComponentElement;
    'fighter-component': HTMLFighterComponentElement;
    'game-component': HTMLGameComponentElement;
    'set-name-component': HTMLSetNameComponentElement;
    'news-component': HTMLNewsComponentElement;
    'not-connected-component': HTMLNotConnectedComponentElement;
    'post-fight-component': HTMLPostFightComponentElement;
    'pre-fight-component': HTMLPreFightComponentElement;
    'pre-game-lobby-component': HTMLPreGameLobbyComponentElement;
    'daniels-fighting-pit': HTMLDanielsFightingPitElement;
    'fighter-model': HTMLFighterModelElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
