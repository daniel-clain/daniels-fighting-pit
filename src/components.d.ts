/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  Fighter,
} from './classes/fighter/fighter';
import {
  Game,
} from './classes/game/game';
import {
  RoundNews,
} from './models/roundNews';
import {
  ManagerOption,
} from './models/managerOptions';
import {
  PlayerStates,
} from './enums/playerStates';


export namespace Components {

  interface FighterComponent {}
  interface FighterComponentAttributes extends StencilHTMLAttributes {}

  interface DanielsFightingPit {}
  interface DanielsFightingPitAttributes extends StencilHTMLAttributes {}

  interface FightDayInterface {
    'fighters': Fighter[];
  }
  interface FightDayInterfaceAttributes extends StencilHTMLAttributes {
    'fighters'?: Fighter[];
  }

  interface GameInterface {
    'game': Game;
  }
  interface GameInterfaceAttributes extends StencilHTMLAttributes {
    'game'?: Game;
  }

  interface NewsHeadlinesInterface {
    'roundNews': RoundNews[];
  }
  interface NewsHeadlinesInterfaceAttributes extends StencilHTMLAttributes {
    'roundNews'?: RoundNews[];
  }

  interface PreFightInterface {
    'fighters': Fighter[];
    'managersMoney': number;
    'managersOptions': ManagerOption[];
  }
  interface PreFightInterfaceAttributes extends StencilHTMLAttributes {
    'fighters'?: Fighter[];
    'managersMoney'?: number;
    'managersOptions'?: ManagerOption[];
  }

  interface PreGameLobby {
    'playerState': PlayerStates;
  }
  interface PreGameLobbyAttributes extends StencilHTMLAttributes {
    'onCancelQueForGame'?: (event: CustomEvent) => void;
    'onGameAccepted'?: (event: CustomEvent) => void;
    'onGameDeclined'?: (event: CustomEvent) => void;
    'onQueForGame'?: (event: CustomEvent) => void;
    'playerState'?: PlayerStates;
  }

  interface FightDayTest {
    'fighters': Fighter[];
  }
  interface FightDayTestAttributes extends StencilHTMLAttributes {
    'fighters'?: Fighter[];
  }

  interface FighterModel {
    'fighter': Fighter;
    'scale': number;
    'update': number;
  }
  interface FighterModelAttributes extends StencilHTMLAttributes {
    'fighter'?: Fighter;
    'scale'?: number;
    'update'?: number;
  }

  interface MyTest {
    'person': any;
  }
  interface MyTestAttributes extends StencilHTMLAttributes {
    'person'?: any;
  }
}

declare global {
  interface StencilElementInterfaces {
    'FighterComponent': Components.FighterComponent;
    'DanielsFightingPit': Components.DanielsFightingPit;
    'FightDayInterface': Components.FightDayInterface;
    'GameInterface': Components.GameInterface;
    'NewsHeadlinesInterface': Components.NewsHeadlinesInterface;
    'PreFightInterface': Components.PreFightInterface;
    'PreGameLobby': Components.PreGameLobby;
    'FightDayTest': Components.FightDayTest;
    'FighterModel': Components.FighterModel;
    'MyTest': Components.MyTest;
  }

  interface StencilIntrinsicElements {
    'fighter-component': Components.FighterComponentAttributes;
    'daniels-fighting-pit': Components.DanielsFightingPitAttributes;
    'fight-day-interface': Components.FightDayInterfaceAttributes;
    'game-interface': Components.GameInterfaceAttributes;
    'news-headlines-interface': Components.NewsHeadlinesInterfaceAttributes;
    'pre-fight-interface': Components.PreFightInterfaceAttributes;
    'pre-game-lobby': Components.PreGameLobbyAttributes;
    'fight-day-test': Components.FightDayTestAttributes;
    'fighter-model': Components.FighterModelAttributes;
    'my-test': Components.MyTestAttributes;
  }


  interface HTMLFighterComponentElement extends Components.FighterComponent, HTMLStencilElement {}
  var HTMLFighterComponentElement: {
    prototype: HTMLFighterComponentElement;
    new (): HTMLFighterComponentElement;
  };

  interface HTMLDanielsFightingPitElement extends Components.DanielsFightingPit, HTMLStencilElement {}
  var HTMLDanielsFightingPitElement: {
    prototype: HTMLDanielsFightingPitElement;
    new (): HTMLDanielsFightingPitElement;
  };

  interface HTMLFightDayInterfaceElement extends Components.FightDayInterface, HTMLStencilElement {}
  var HTMLFightDayInterfaceElement: {
    prototype: HTMLFightDayInterfaceElement;
    new (): HTMLFightDayInterfaceElement;
  };

  interface HTMLGameInterfaceElement extends Components.GameInterface, HTMLStencilElement {}
  var HTMLGameInterfaceElement: {
    prototype: HTMLGameInterfaceElement;
    new (): HTMLGameInterfaceElement;
  };

  interface HTMLNewsHeadlinesInterfaceElement extends Components.NewsHeadlinesInterface, HTMLStencilElement {}
  var HTMLNewsHeadlinesInterfaceElement: {
    prototype: HTMLNewsHeadlinesInterfaceElement;
    new (): HTMLNewsHeadlinesInterfaceElement;
  };

  interface HTMLPreFightInterfaceElement extends Components.PreFightInterface, HTMLStencilElement {}
  var HTMLPreFightInterfaceElement: {
    prototype: HTMLPreFightInterfaceElement;
    new (): HTMLPreFightInterfaceElement;
  };

  interface HTMLPreGameLobbyElement extends Components.PreGameLobby, HTMLStencilElement {}
  var HTMLPreGameLobbyElement: {
    prototype: HTMLPreGameLobbyElement;
    new (): HTMLPreGameLobbyElement;
  };

  interface HTMLFightDayTestElement extends Components.FightDayTest, HTMLStencilElement {}
  var HTMLFightDayTestElement: {
    prototype: HTMLFightDayTestElement;
    new (): HTMLFightDayTestElement;
  };

  interface HTMLFighterModelElement extends Components.FighterModel, HTMLStencilElement {}
  var HTMLFighterModelElement: {
    prototype: HTMLFighterModelElement;
    new (): HTMLFighterModelElement;
  };

  interface HTMLMyTestElement extends Components.MyTest, HTMLStencilElement {}
  var HTMLMyTestElement: {
    prototype: HTMLMyTestElement;
    new (): HTMLMyTestElement;
  };

  interface HTMLElementTagNameMap {
    'fighter-component': HTMLFighterComponentElement
    'daniels-fighting-pit': HTMLDanielsFightingPitElement
    'fight-day-interface': HTMLFightDayInterfaceElement
    'game-interface': HTMLGameInterfaceElement
    'news-headlines-interface': HTMLNewsHeadlinesInterfaceElement
    'pre-fight-interface': HTMLPreFightInterfaceElement
    'pre-game-lobby': HTMLPreGameLobbyElement
    'fight-day-test': HTMLFightDayTestElement
    'fighter-model': HTMLFighterModelElement
    'my-test': HTMLMyTestElement
  }

  interface ElementTagNameMap {
    'fighter-component': HTMLFighterComponentElement;
    'daniels-fighting-pit': HTMLDanielsFightingPitElement;
    'fight-day-interface': HTMLFightDayInterfaceElement;
    'game-interface': HTMLGameInterfaceElement;
    'news-headlines-interface': HTMLNewsHeadlinesInterfaceElement;
    'pre-fight-interface': HTMLPreFightInterfaceElement;
    'pre-game-lobby': HTMLPreGameLobbyElement;
    'fight-day-test': HTMLFightDayTestElement;
    'fighter-model': HTMLFighterModelElement;
    'my-test': HTMLMyTestElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
